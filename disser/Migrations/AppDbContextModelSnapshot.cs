// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using disser.Models.Base;

#nullable disable

namespace disser.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("disser.Models.EF.GOST.AllGOST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedGOSTId")
                        .HasColumnType("integer");

                    b.Property<string>("GOSTName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KeyWords")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedGOSTId");

                    b.ToTable("AllGOST");
                });

            modelBuilder.Entity("disser.Models.EF.GOST.CreatedGOST", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChoisedRukovoditelID")
                        .HasColumnType("integer");

                    b.Property<string>("EndedFile")
                        .HasColumnType("text");

                    b.Property<bool>("OnWork")
                        .HasColumnType("boolean");

                    b.Property<int>("WorkPercentage")
                        .HasColumnType("integer");

                    b.Property<bool>("isFinished")
                        .HasColumnType("boolean");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("CreatedGOST");
                });

            modelBuilder.Entity("disser.Models.EF.GOST.RukovoditelWantWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CommentFromIspolnitel")
                        .HasColumnType("text");

                    b.Property<string>("CommentToIspolnitel")
                        .HasColumnType("text");

                    b.Property<int>("CreatedGOSTId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IspolnitelFile")
                        .HasColumnType("text");

                    b.Property<int?>("IspolnitelId")
                        .HasColumnType("integer");

                    b.Property<int>("RukovoditelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("isFinishedTask")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CreatedGOSTId");

                    b.ToTable("RukovoditelWantWork");
                });

            modelBuilder.Entity("disser.Models.EF.GOST.SimilarFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedGOSTId")
                        .HasColumnType("integer");

                    b.Property<string>("GOSTName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SimilarFiles")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedGOSTId");

                    b.ToTable("SimilarFiles");
                });

            modelBuilder.Entity("disser.Models.EF.GOST.TranslateFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentFromTranslator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CommentToTranslator")
                        .HasColumnType("text");

                    b.Property<int>("CreatedGOSTId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("boolean");

                    b.Property<string>("TranslateFileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TranslatorId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkPercentage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedGOSTId");

                    b.ToTable("TranslateFile");
                });

            modelBuilder.Entity("disser.Models.EF.Users.Documents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("disser.Models.EF.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LeaderID")
                        .HasColumnType("integer");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isVerify")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("disser.Models.EF.GOST.AllGOST", b =>
                {
                    b.HasOne("disser.Models.EF.GOST.CreatedGOST", null)
                        .WithMany("CreatedGOSTAddedFiles")
                        .HasForeignKey("CreatedGOSTId");
                });

            modelBuilder.Entity("disser.Models.EF.GOST.RukovoditelWantWork", b =>
                {
                    b.HasOne("disser.Models.EF.GOST.CreatedGOST", null)
                        .WithMany("RukovoditelWantWork")
                        .HasForeignKey("CreatedGOSTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("disser.Models.EF.GOST.SimilarFile", b =>
                {
                    b.HasOne("disser.Models.EF.GOST.CreatedGOST", null)
                        .WithMany("similarGOSTs")
                        .HasForeignKey("CreatedGOSTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("disser.Models.EF.GOST.TranslateFile", b =>
                {
                    b.HasOne("disser.Models.EF.GOST.CreatedGOST", null)
                        .WithMany("FullFileToTranslate")
                        .HasForeignKey("CreatedGOSTId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("disser.Models.EF.Users.Documents", b =>
                {
                    b.HasOne("disser.Models.EF.Users.User", null)
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("disser.Models.EF.GOST.CreatedGOST", b =>
                {
                    b.Navigation("CreatedGOSTAddedFiles");

                    b.Navigation("FullFileToTranslate");

                    b.Navigation("RukovoditelWantWork");

                    b.Navigation("similarGOSTs");
                });

            modelBuilder.Entity("disser.Models.EF.Users.User", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
